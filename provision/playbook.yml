# TODO: check out http://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html

- hosts: all
  become: yes

  vars:
    root_dir: /srv/wift
    root_site: "{{ 'wift.local' if target == 'local' else 'wift.io' }}"

  tasks:
    - name: Add pipenv repository
      apt_repository: repo='ppa:pypa/ppa' state=present

    - name: Install core packages
      apt: update_cache=yes name={{ item }} state=present
      with_items:
        - software-properties-common
        - python-software-properties
        - pipenv
    
    - name: Install dev utilities        
      apt: update_cache=yes name={{ item }} state=present
      with_items:
        - htop
        - git
        - vim
        - nginx
        - supervisor
    
    - name: Create wift user
      user:
        name: wift
        groups: www-data
        state: present
        createhome: yes
      when: target != 'local'
    
    - name: Add .ssh directory for the wift user
      file:
        path: /home/wift/.ssh
        state: directory
        mode: 0700
        owner: wift
        group: wift
      when: target != 'local'
    
    - name: Copy wift app user ssh key
      copy:
        src: secrets/wift_demo
        dest: /home/wift/.ssh/id_ed25519
        owner: wift
        group: wift
        mode: 0700
      when: target != 'local'

    - name: Ensure github.com is a known host
      become_user: wift
      lineinfile:
        dest: ~/.ssh/known_hosts
        state: present
        create: yes
        line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        regexp: '^github\\.com'

    - name: Clone the source code
      become_user: wift
      git:
        repo: git@github.com:meronym/wift.git
        dest: /home/wift/wift
      when: target != 'local'
    
    - name: Create wift root directory
      file:
        path: '{{ root_dir }}'
        owner: "{{ 'vagrant' if target == 'local' else 'wift' }}"
        group: www-data
        state: directory
        mode: 0755

    - name: Link code repositories (local setup)
      file:
        src: '/vagrant/{{ item }}'
        dest: '{{ root_dir }}/{{ item }}'
        state: link
      with_items:
        - wift-api
        - wift-checkout
        - wift-landing
        - wift-store
      when: target == 'local'

    - name: Link code repositories (production setup)
      become_user: wift
      file:
        src: '/home/wift/wift/{{ item }}'
        dest: '{{ root_dir }}/{{ item }}'
        state: link
      with_items:
        - wift-api
        - wift-checkout
        - wift-landing
        - wift-store
      when: target != 'local'

    - name: Disable the default site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: reload nginx

    - name: Setup Nginx configs files
      template:
        src: 'nginx/{{ item }}'
        dest: '/etc/nginx/sites-available/{{ item }}'
      with_items:
        - wift-api.conf
        - wift-checkout.conf
        - wift-landing.conf
        - wift-store.conf
      notify: reload nginx

    - name: Enable Nginx sites
      file:
        src: '/etc/nginx/sites-available/{{ item }}'
        dest: '/etc/nginx/sites-enabled/{{ item }}'
        state: link
      with_items:
        - wift-api.conf
        - wift-landing.conf
        - wift-checkout.conf
        - wift-store.conf
      notify: reload nginx

    - name: Add enabled Nginx sites to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: '127.0.0.1 {{ item }}'
        state: present
      with_items:
        - '{{ root_site }}'
        - 'www.{{ root_site }}'
        - 'checkout.{{ root_site }}'
        - 'api.{{ root_site }}'
        - 'store.{{ root_site }}'

    # MongoDB section
    - name: Add MongoDB public GPG key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
    
    - name: Add MongoDB stable repository
      apt_repository:
        repo: 'deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse'
        state: present

    - name: Install MongoDB
      apt: update_cache=yes name=mongodb-org state=present

    - name: Start MongoDB and enable automatic launch at system start
      service: name=mongod state=started enabled=yes
    
    # Redis
    - name: Install Redis
      apt: name=redis-server state=present
    
    # Wift app dependencies via pipenv (gunicorn included)
    - name: Install wift-api requirements
      become_user: wift
      command: pipenv install chdir={{ root_dir }}/wift-api

    - name: Install wift-store requirements
      become_user: wift
      command: pipenv install chdir={{ root_dir }}/wift-store
    
    - name: Create supervisor log dir
      file:
        dest: /var/log/supervisord/
        state: directory
      notify: restart supervisord
    
    - name: Configure supervisor
      template:
        src: supervisord.conf
        dest: /etc/supervisord.conf
      notify: restart supervisord

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded

    - name: restart supervisord
      service:
        name: supervisor
        state: restarted
